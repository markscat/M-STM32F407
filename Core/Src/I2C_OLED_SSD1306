/*
 * I2C_OLED_SSD1306.c
 *
 *  Created on: Aug 3, 2025
 *      Author: Ethan
 */

#include "I2C_OLED_SSD1306.h"
#include "I2C_Peripherals.h"
#include <stdint.h>

extern I2C_HandleTypeDef hi2c1;

static const uint8_t OLED_InitCmd[] = {
    0xAE,           // Display off
    0xD5, 0x80,     // Set display clock divide ratio/oscillator frequency
    0xA8, 0x3F,     // Set multiplex ratio (1 to 64)
    0xD3, 0x00,     // Set display offset
    0x40,           // Set start line address
    0x8D, 0x14,     // Enable charge pump
    0x20, 0x00,     // Memory addressing mode: Horizontal
    0xA1,           // Segment remap
    0xC8,           // COM output scan direction remapped
    0xDA, 0x12,     // COM pins hardware configuration
    0x81, 0xCF,     // Set contrast control
    0xD9, 0xF1,     // Set pre-charge period
    0xDB, 0x40,     // Set Vcomh deselect level
    0xA4,           // Entire display ON (resume)
    0xA6,           // Set normal display
    0xAF            // Display ON
};

void OLED_Init(void) {
    HAL_Delay(100);  // 等待螢幕穩定
    for (uint8_t i = 0; i < sizeof(OLED_InitCmd); i++) {
        HAL_I2C_Mem_Write(&hi2c1, OLED_ADDRESS, OLED_CMD, 1, (uint8_t*)&OLED_InitCmd[i], 1, HAL_MAX_DELAY);
    }
}

void OLED_Clear(void) {
    uint8_t empty[128] = {0};
    for (uint8_t page = 0; page < 8; page++) {
        uint8_t cmds[] = {
            0xB0 + page,    // Page address
            0x00,           // Lower column address
            0x10            // Higher column address
        };
        HAL_I2C_Mem_Write(&hi2c1, OLED_ADDRESS, OLED_CMD, 1, cmds, sizeof(cmds), HAL_MAX_DELAY);
        HAL_I2C_Mem_Write(&hi2c1, OLED_ADDRESS, OLED_DATA, 1, empty, 128, HAL_MAX_DELAY);
    }
}

void OLED_UpdateScreen(uint8_t* buffer) {
    for (uint8_t page = 0; page < 8; page++) {
        uint8_t cmds[] = {
            0xB0 + page,
            0x00,
            0x10
        };
        HAL_I2C_Mem_Write(&hi2c1, OLED_ADDRESS, OLED_CMD, 1, cmds, sizeof(cmds), HAL_MAX_DELAY);
        HAL_I2C_Mem_Write(&hi2c1, OLED_ADDRESS, OLED_DATA, 1, &buffer[page * 128], 128, HAL_MAX_DELAY);
    }
}

void OLED_SetContrast(uint8_t contrast) {
    uint8_t cmd[] = {0x81, contrast};
    HAL_I2C_Mem_Write(&hi2c1, OLED_ADDRESS, OLED_CMD, 1, cmd, 2, HAL_MAX_DELAY);
}

